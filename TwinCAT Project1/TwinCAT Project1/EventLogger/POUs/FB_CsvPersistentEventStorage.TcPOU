<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_CsvPersistentEventStorage" Id="{b4c1c4a0-dc09-41a4-872b-1d850b9d9ab7}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_CsvPersistentEventStorage IMPLEMENTS I_PersistentEventStorage
VAR
	fbFileOpen : FB_FileOpen := (sPathName := 'C:/Events.log', nMode := FOPEN_MODEAPPEND);
	fbFilePuts : FB_FilePuts;
	fbFileClose : FB_FileClose;
	eWriteState : (FILE_OPEN_TRIGGER, FILE_OPEN, WAIT_FOR_EVENT, WRITE_EVENT_TRIGGER, WRITE_EVENT, FILE_CLOSE_TRIGGER, FILE_CLOSE, ERROR);
	stEventWrittenToFile : ST_Event;
	
	CsvString : T_MaxString;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE eWriteState OF
	FILE_OPEN_TRIGGER :
		fbFileOpen(bExecute := TRUE);
		eWriteState := FILE_OPEN;
			
	FILE_OPEN :
		fbFileOpen(bExecute := FALSE);
		IF fbFileOpen.bError THEN
			eWriteState := ERROR;
		ELSIF NOT fbFileOpen.bBusy AND fbFileOpen.hFile <> 0 THEN
			eWriteState := WAIT_FOR_EVENT;
		END_IF
	
	WAIT_FOR_EVENT :
		// Flag, nothing to do
		
	WRITE_EVENT_TRIGGER :
		CsvString := CreateCsvString(stEvent := stEventWrittenToFile);
		fbFilePuts(bExecute := TRUE,
					sLine := CsvString,
					hFile := fbFileOpen.hFile
					);
		eWriteState := WRITE_EVENT;
	
	WRITE_EVENT :
		fbFilePuts(bExecute := FALSE);
		IF fbFilePuts.bError THEN
			eWriteState := ERROR;
		ELSIF NOT fbFilePuts.bBusy THEN
			eWriteState := FILE_CLOSE_TRIGGER;
		
		END_IF
	
	FILE_CLOSE_TRIGGER :
		fbFileClose(bExecute := TRUE,
					hFile := fbFileOpen.hFile);
		eWriteState := FILE_CLOSE;
		
	FILE_CLOSE :
		fbFileClose(bExecute := FALSE);
		IF fbFileClose.bError THEN
			eWriteState := ERROR;
		ELSIF NOT fbFileClose.bBusy THEN
			eWriteState := FILE_OPEN_TRIGGER;
		END_IF
		
	
	ERROR:
		// Handle error
	
END_CASE]]></ST>
    </Implementation>
    <Method Name="CreateCsvString" Id="{7d68e9b4-19ca-4b51-94d5-8b65a48e97ab}">
      <Declaration><![CDATA[METHOD PRIVATE CreateCsvString : T_MaxString
VAR_INPUT
	stEvent : REFERENCE TO ST_Event;
END_VAR
VAR
	TempString : T_MaxString;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TempString := TO_STRING(stEvent.eEventType);
TempString := CONCAT(STR1 := TempString, STR2 := ',');
TempString := CONCAT(STR1 := TempString, STR2 := TO_STRING(stEvent.eEventSeverity));
TempString := CONCAT(STR1 := TempString, STR2 := ',');
TempString := CONCAT(STR1 := TempString, STR2 := TO_STRING(stEvent.nEventIdentity));
TempString := CONCAT(STR1 := TempString, STR2 := ',');
TempString := CONCAT(STR1 := TempString, STR2 := stEvent.sEventText);
TempString := CONCAT(STR1 := TempString, STR2 := ',');
TempString := CONCAT(STR1 := TempString, STR2 := TO_STRING(stEvent.dtTimestamp));
TempString := CONCAT(STR1 := TempString, STR2 := '$n');

CreateCsvString := TempString;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StoreEvent" Id="{9f68c303-6207-42c4-81f0-208ca278ff97}">
      <Declaration><![CDATA[METHOD StoreEvent
VAR_INPUT
	stEvent	: ST_Event;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// CSV writing
IF eWriteState = WAIT_FOR_EVENT THEN
	eWriteState := WRITE_EVENT_TRIGGER;
	stEventWrittenToFile := stEvent;
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_CsvPersistentEventStorage">
      <LineId Id="9" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="36" Count="2" />
      <LineId Id="45" Count="1" />
      <LineId Id="39" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="52" Count="1" />
      <LineId Id="58" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="64" Count="2" />
      <LineId Id="82" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="85" Count="1" />
      <LineId Id="73" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="87" Count="2" />
      <LineId Id="95" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="41" Count="1" />
      <LineId Id="93" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="FB_CsvPersistentEventStorage.CreateCsvString">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="8" />
      <LineId Id="19" Count="0" />
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="FB_CsvPersistentEventStorage.StoreEvent">
      <LineId Id="7" Count="2" />
      <LineId Id="11" Count="0" />
      <LineId Id="10" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>